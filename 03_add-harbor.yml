---
#- name: test
#  gather_facts: false
#  hosts: harbor
#  tasks:
#    - name: test
#      debug:
#        msg:
#          - "{{ NEW_INSTALL }}"
#          - "NEW_INSTALL"
#          - "{{ groups['harbor'][0] }}"
#          - "{{ groups['harbor'] }}"
#          - "{{ groups['k8s'] }}"
#          - "{{ inventory_hostname }}"
#          - "{{ hostvars[inventory_hostname] }}"


- name: 00更新tls
  gather_facts: false
  hosts: localhost
  roles:
    - tls
  tags: harbor


- name: 01安装harbor
  gather_facts: false
  hosts: harbor
  roles:
    - docker
    - harbor
  tags: harbor

- name: 02更新harbor dns
  gather_facts: false
  hosts: 
    - harbor
  tasks:
    - name: /etc/hosts添加DNS
      lineinfile:
        dest: /etc/hosts
        state: present
        regexp: '{{ HARBOR_DOMAIN }}'
        line: "{{ groups['harbor'][0] }} {{ HARBOR_DOMAIN }}"
  tags: harbor

- name: 03 docker登录harbor
  gather_facts: false
  hosts: 
    - harbor
  tasks:
    - name: docker登录harbor
      shell: echo {{ HARBOR_PASSWORD }} | docker login -u admin --password-stdin https://{{ HARBOR_REGISTRY }}
  tags: harbor_login
  tags: harbor
#退出登录 rm -rf /root/.docker/config.json

- name: 04更新node dns
  gather_facts: false
  hosts: 
    - k8s
  tasks:
    - name: /etc/hosts添加DNS
      lineinfile:
        dest: /etc/hosts
        state: present
        regexp: '{{ HARBOR_DOMAIN }}'
        line: "{{ groups['harbor'][0] }} {{ HARBOR_DOMAIN }}"
  tags: harbor_containerd

- name: 05节点更新containerd
  gather_facts: false
  hosts: 
    - k8s
  tasks:
    - name: 创建containerd证书目录
      file: dest=/etc/containerd/certs.d/{{ HARBOR_REGISTRY }} state=directory

#好像没啥用
#    - name: 分发containerd证书
#      copy: src=harbor_cert/{{ item }} dest=/etc/containerd/certs.d/{{ HARBOR_REGISTRY }}
#      with_items:
#        - ca.pem
#        - harbor.pem
#        - harbor-key.pem

    - name: 信任证书
      shell: update-ca-trust

    - name: 重配 containerd 文件
      template: src=config.toml.j2 dest=/etc/containerd/config.toml

    - name: 重启 containerd 服务
      shell: systemctl daemon-reload && systemctl restart containerd
  tags: harbor_containerd