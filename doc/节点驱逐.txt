在 Kubernetes 中，当一个节点被卸载（即从集群中删除）时，Kubernetes 会尝试将该节点上的 Pod 迁移到其他可用节点上。这个过程由 Kubernetes 控制器管理器中的调度器组件负责。

具体过程如下：

1. **节点标记为不可调度**：
   在卸载节点之前，通常需要将节点标记为不可调度，以防止新的 Pod 被调度到这个节点上。可以使用以下命令：
   ```sh
   kubectl cordon <node-name>
   ```

2. **驱逐节点上的 Pod**：
   将节点上的 Pod 驱逐（移除）到其他节点上。可以使用以下命令：
   ```sh
   kubectl drain <node-name> --ignore-daemonsets --delete-local-data
   ```
   - `--ignore-daemonsets`：忽略 DaemonSet 创建的 Pod，因为它们通常只在特定节点上运行。
   - `--delete-local-data`：删除节点上的本地数据。

3. **节点删除后 Pod 迁移**：
   当节点被标记为不可调度并且所有 Pod 被驱逐后，你可以安全地从集群中删除该节点。可以使用以下命令：
   ```sh
   kubectl delete node <node-name>
   ```

4. **Pod 重调度**：
   被驱逐的 Pod 将被 Kubernetes 调度器自动重新调度到其他可用节点上。调度器会根据资源需求和集群策略来选择合适的节点。

需要注意的几点：

- **持久化存储**：如果 Pod 使用了持久化卷（Persistent Volume），确保目标节点能够访问这些存储资源。
- **服务中断**：在 Pod 迁移过程中，可能会有短暂的服务中断。因此，建议在维护窗口内执行节点卸载操作。
- **资源充足**：确保集群中其他节点有足够的资源来容纳被迁移的 Pod。

如果你按照上述步骤操作，当你卸载节点后，Pod 应该会自动迁移到其他节点上，从而确保服务的持续运行。