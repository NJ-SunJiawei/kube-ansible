#https://support.huawei.com/enterprise/zh/doc/EDOC1100063070/23e4177e
#https://cloud.tencent.com/developer/article/2010030
#https://www.cnblogs.com/dream397/p/13932065.html
#https://www.chenshaowen.com/blog/sr-iov-technique.html
#https://segmentfault.com/a/1190000021061494?sort=votes

https://github.com/k8snetworkplumbingwg/sriov-network-operator
https://github.com/k8snetworkplumbingwg/sriov-network-device-plugin/blob/master/docs/vf-setup.md

dmesg | grep -i iommu
dmesg | grep -i smmu
cat /proc/iomem | grep -i smmu


1. 修改Bios enable SR-IOV
只支持pcie虚拟化
高级—PCIE设备信息和配置—PCIE配置—SR-IOV支持；
高级—兼容模式—PCIE SMMU开启
这两个选项在bios setup下默认是关闭

2、查找宿主机上是否有支持SR-IOV的智能网卡
lspci -v | grep -i SR-IOV

lspci -nn | grep Eth
lspci -s 0000:0d:00.0  -vvv | grep Capabilities
'''
	Capabilities: [40] Power Management version 3
	Capabilities: [50] MSI: Enable- Count=1/1 Maskable+ 64bit+
	Capabilities: [70] MSI-X: Enable+ Count=129 Masked-
	Capabilities: [a0] Express (v2) Endpoint, MSI 00
	Capabilities: [e0] Vital Product Data
	Capabilities: [100 v2] Advanced Error Reporting
	Capabilities: [140 v1] Device Serial Number 59-ad-67-ff-ff-c4-c2-9c
	Capabilities: [150 v1] Alternative Routing-ID Interpretation (ARI)
	Capabilities: [160 v1] Single Root I/O Virtualization (SR-IOV)  ！！！！！有这行说明网卡支持SRIOV
	Capabilities: [1a0 v1] Transaction Processing Hints
	Capabilities: [1b0 v1] Access Control Services
	Capabilities: [1d0 v1] Secondary PCI Express
'''

3、
CONFIG_ARM_SMMU=y
CONFIG_ARM_SMMU_V3=y

modprobe -v vfio-pci

cat /proc/cmdline 
'''
iommu=on(默认是打开的，写不写无所谓) iommu.passthrough=on(透传模式)
'''
修改 /etc/default/grub：

iommu.passthrough=on	启用所有设备的 IOMMU 直通模式，绕过地址翻译。	系统全局，所有 IOMMU 设备。	降低安全性，但提高性能。
(更好)smmu.bypassdev=0x1000:0x17	针对指定设备禁用 SMMU 地址翻译功能。	单个 SMMU 设备（通过 BDF 指定）。	仅影响指定设备的安全性。
lspci -nn | grep 1000:0017查找smmu.bypassdev设备

4、确定设备的厂商号、设备号和驱动信息
cat /sys/bus/pci/devices/0000:0d:00.0/sriov_totalvfs
cat /sys/bus/pci/devices/0000:0d:00.0/sriov_numvfs
lspci | grep "Virtual Function"
find /sys/kernel/iommu_groups/ -type l
lspci -vvt

查看设备驱动：ls -l /sys/class/pci_bus/0000:0d/device/0000:0d:02.0 | grep driver 
查看厂商号和设备号是:lspci -n | grep 0000:0d:02.0
 
选择一张SR-IOV设备，
生成vf设备：     echo 4 > /sys/bus/pci/devices/0000:0d:00.0/sriov_numvfs
关闭SR-IOV功能： echo 0 > /sys/bus/pci/devices/0000:0d:00.0/sriov_numvfs


5、基于以太网口名字配置 enp13s0f0（网卡名字是可能变de）
ls /sys/class/net/
cat /sys/class/net/enp13s0f0/device/sriov_numvfs
echo 8 > /sys/class/net/enp13s0f0/device/sriov_numvfs
echo 0 > /sys/class/net/enp13s0f0/device/sriov_numvfs
lspci | grep "Virtual Function"
lspci -vvt
ip link show enp13s0f0
ip a|grep enp13s0f0v
可以看到驱动类型: ethtool -i enp13s0f0v0
确认支持 SR-IOV: lspci -s 0000:0d:00.0  -vvv | grep SR-IOV
查看厂商、设备 ID: lspci -s 0000:0d:00.0 -n


/etc/rc.local
某些使用 的卡ixgbe可能需要额外的配置:modprobe -r ixgbe; modprobe ixgbe max_vfs=8


dpdk-devbind.py参考
echo "0000:2b:10.7" >> /sys/bus/pci/drivers/igbvf/unbind
echo "0000:2b:10.7" >> /sys/bus/pci/drivers/vfio-pci/bind
通过上述命令，就可以把PCI总线地址为0000:02:00.0的PCI设备使用的驱动从XXX切换为YYY

#echo "0000:XX:XX.X" > /sys/bus/pci/devices/0000:XX:XX.X/driver/unbind
#echo "vfio-pci" > /sys/class/net/enp11s0f0v0/device/driver_override
#echo "0000:XX:XX.X" > /sys/bus/pci/drivers/vfio-pci/bind


python3 dpdk-devbind.py -b vfio-pci enp11s0f0v0
python3 dpdk-devbind.py -b iavf     0000:0b:02.0
