# 安装目录 
software_dir: '/data/k8s_install/k8s_1.24.2'
k8s_work_dir: '/opt/kubernetes'
k8s_addons_dir: '{{ k8s_work_dir }}/addons'
etcd_work_dir: '/opt/etcd'
tmp_dir: '/tmp/k8s'

#cfssl工具:arm/x86
cfssl_type: 'arm'

# 集群网络
service_cidr: '10.0.0.0/24'
cluster_dns: '10.0.0.2'   # 与roles/addons/files/coredns.yaml中IP一致，并且是service_cidr中的IP
pod_cidr: '10.244.0.0/16' # 与roles/addons/files/calico.yaml中网段一致
service_nodeport_range: '30000-32767'
cluster_domain: 'cluster.local'

# 高可用，如果部署单Master，该项忽略
vip: '192.168.114.88'
nic: 'ens33'  # 修改为实际内网网卡名

# 自签证书可信任IP列表，为方便扩展，可添加多个预留IP
cert_hosts:
  # 包含所有LB、VIP、Master IP和service_cidr的第一个IP
  k8s:
    - 10.0.0.1
    - 192.168.114.88
    - 192.168.114.30
    - 192.168.114.31
    - 192.168.114.32
    - 192.168.114.33
    - 192.168.114.34
    - 192.168.114.35
    - 192.168.114.36
    - 192.168.114.37
    - 192.168.114.38
    - 192.168.114.39
    - 192.168.114.40
    - 192.168.114.41
    - 192.168.114.42
    - 192.168.114.43
    - 192.168.114.44
    - 192.168.114.45
    - 192.168.114.46
    - 192.168.114.47
    - 192.168.114.48
    - 192.168.114.49
    - 192.168.114.100
    - 192.168.114.101
    - 192.168.114.102
    - 192.168.114.103
    - 192.168.114.104
    - 192.168.114.105
    - 192.168.114.106
    - 192.168.114.107
    - 192.168.114.108
    - 192.168.114.109
    - 192.168.114.110
    - 192.168.114.111
    - 192.168.114.112
    - 192.168.114.113
    - 192.168.114.114
    - 192.168.114.115
    - 192.168.114.116
    - 192.168.114.117
    - 192.168.114.118
    - 192.168.114.119
  # 包含所有etcd节点IP
  etcd:
    - 192.168.114.112
#    - 192.168.114.34
#    - 192.168.114.35

############################
# nfs server
############################
nfs_default_path: "/data/k8s"

############################
#metrics-server
############################
metrics-server_install: yes

############################
#dashboard
############################
dashboard_install: yes
dashboard_nodeport: 30001

############################
# ha高可用
############################
ha_support: false

############################
# prometheus+grafana
# 和kubesphere二选一
############################
prom_namespace: "monitor"
prom_chart_ver: "45.23.0"
prom_install: no
prom_operator_nodeport: 30899
prom_operator_nodeport_tls: 30900
prom_self_nodeport: 30901
prom_alertmanager_nodeport: 30902
prom_grafana_nodeport: 30903
############################
# kubesphere 30880
############################
kubesphere_ver: "3.3.2"
kubesphere_install: yes
kubesphere_api_nodeport: 30801
kubesphere_nodeport: 30880
kubesphere_password: "P@88w0rd"
############################
# helm charts
#和kubeconfig部署在一起
############################
HELM_VER: "v3.11.1"
HELM_PATH: "/root/helm"
HELM_PORT: 80 #harbor和helm部署在一起 端口不可为80
HELM_CHARTS: "private" #public为官方联网

############################
# harbor
############################
# harbor version，完整版本号
HARBOR_VER: "v2.10.2"
HARBOR_DOMAIN: "registry.zjy.com"
HARBOR_PATH: "/var/data"
HARBOR_TLS_PORT: 443
#如果端口等于443，HARBOR_REGISTRY可以不需要HARBOR_TLS_PORT
HARBOR_REGISTRY: "{{ HARBOR_DOMAIN }}"
#HARBOR_REGISTRY: "{{ HARBOR_DOMAIN }}:{{ HARBOR_TLS_PORT }}"
HARBOR_PASSWORD: "zjy@123456"
HARBOR_DB_PASSWORD: "zjydb@123456" 
# install extra component
HARBOR_WITH_TRIVY: false

############################
# role:runtime [containerd,docker]
############################
# [.]docker启用拉取加速镜像仓库
ENABLE_MIRROR_REGISTRY: true

# [.]添加信任的私有仓库
# 必须按照如下示例格式，协议头'http://'和'https://'不能省略
INSECURE_REG:
  - "https://harbor.yourcompany.com"
#  - "http://{{ groups['harbor'][0] }}:8080"

# [containerd]容器持久化存储目录
CONTAINERD_STORAGE_DIR: "/var/lib/containerd"

# [docker]容器存储目录
DOCKER_STORAGE_DIR: "/var/lib/docker"

# [docker]开启Restful API
DOCKER_ENABLE_REMOTE_API: false