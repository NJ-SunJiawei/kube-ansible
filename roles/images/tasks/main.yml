---
- block:
    - name: 创建临时目录
      file: dest={{ tmp_dir }}/images state=directory
  tags: 
    - addons_coredns
    - addons_network_calico
    - addons_network_flannel
    - addons_network_ovn
    - addons_metrics
    - addons_dashboard
    - addons_multus
    - addons_prometheus
    - addons_nfs
    - addons_kubesphere
    - addons_metallb
    - addons_ingress
    - addons_sriov

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/base dest={{ tmp_dir }}/images
    - name: 导入base镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/base && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/calico dest={{ tmp_dir }}/images
    - name: 导入calico镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/calico && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
    - name: 在节点创建相关目录
      file: name={{ item }} state=directory
      with_items:
      - /etc/calico
      - /etc/calico/ssl
    - name: 在节点创建相关目录
      file: name={{ tmp_dir }}/calico state=directory

    - name: 分发etcd证书
      copy: src=calico/etcd_cert/{{ item }} dest=/etc/calico/ssl
      with_items:
        - ca.pem
        - server.pem
        - server-key.pem

    - name: 下载calicoctl 客户端
      unarchive: src={{ item }} dest={{ tmp_dir }}/calico mode=0755
      with_fileglob:
        - "{{ software_dir }}/calicoctl-linux-arm64-*.tar.gz"

    - name: 安装calicoctl二进制文件
      shell: cd {{ tmp_dir }}/calico && mv calicoctl-linux-arm64 /usr/local/bin/calicoctl && chmod 777 /usr/local/bin/calicoctl

    - name: 准备 calicoctl配置文件
      template: src=calico/calicoctl.cfg.j2 dest=/etc/calico/calicoctl.cfg
  when: "cluster_network == 'calico'"
  tags: addons_network_calico

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/flannel dest={{ tmp_dir }}/images
    - name: 导入flannel镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/flannel && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: "cluster_network == 'flannel'"
  tags: addons_network_flannel

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/ovn dest={{ tmp_dir }}/images
    - name: 导入kube-ovn镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/ovn && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: "cluster_network == 'kube-ovn'"
  tags: addons_network_ovn

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/dns dest={{ tmp_dir }}/images
    - name: 导入dns镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/dns && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  tags: addons_coredns

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/nfs dest={{ tmp_dir }}/images
    - name: 导入nfs镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/nfs && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  tags: addons_nfs

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/multus dest={{ tmp_dir }}/images
    - name: 导入multus镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/multus && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: multus_install == "yes"
  tags: addons_multus

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/metallb dest={{ tmp_dir }}/images
    - name: 导入metallb镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/metallb && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: metallb_install == "yes"
  tags: addons_metallb

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/ingress dest={{ tmp_dir }}/images
    - name: 导入ingress镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/ingress && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: ingress_install == "yes"
  tags: addons_ingress

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/dashboard dest={{ tmp_dir }}/images
    - name: 导入dashboard镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/dashboard && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: dashboard_install == "yes"
  tags: addons_dashboard

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/metrics dest={{ tmp_dir }}/images
    - name: 导入metrics-server镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/metrics && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: metrics_server_install == "yes"
  tags: addons_metrics

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/prometheus dest={{ tmp_dir }}/images
    - name: 导入prometheus镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/prometheus && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: prom_install == "yes"
  tags: addons_prometheus

- block:
    - name: 分发镜像（需要花费一些时间...）
      unarchive: src={{ software_dir }}/images/kubesphere/kubesphere_{{ kubesphere_ver }}_part.tar.gz dest={{ tmp_dir }}/images
    #https://ask.kubesphere.io/forum/d/7853-armkubesphere-v330-ks-console/4
    - name: 分发插件补丁
      copy: src={{ software_dir }}/images/kubesphere/registry.zjy.com_tsz_kubesphere_ks-console_v3.3.2.tar dest={{ tmp_dir }}/images/kubesphere
    - name: 导入kubesphere镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/kubesphere && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: kubesphere_install == "yes"
  tags: addons_kubesphere

- block:
    - name: 分发镜像（需要花费一些时间...）
      copy: src={{ software_dir }}/images/sriov dest={{ tmp_dir }}/images
    - name: 导入sriov镜像（需要花费一些时间...）
      shell: cd {{ tmp_dir }}/images/sriov && \
             for image in $(ls *.tar*);do ctr -n=k8s.io image import $image;sleep 0.5;done
  when: sriov_install == "yes"
  tags: addons_sriov