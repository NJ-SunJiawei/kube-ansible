---
# 这个剧本在所有节点上运行

- name: 设置时区
  shell: timedatectl set-timezone Asia/Shanghai

- name: 设置RTC
  shell: timedatectl set-local-rtc 0

# 服务器可联网，可以开启以下字段，自动同步网络时间，否则同步自身时间服务器
#- name: 同步系统时间
#  yum: name=ntpdate state=present
#- name: 同步系统时间
#  shell: ntpdate time.windows.com

#- name: 创建临时目录
#  file: dest={{ tmp_dir }} state=directory

- name: 分发依赖包
  copy: src={{ software_dir }}/{{ item }} dest={{ tmp_dir }}
  with_items:
    - rpm-tools
#    - vbbu

- name: 安装rpm-tools包
  shell: rpm -ivh --replacepkgs --force --nodeps  {{ tmp_dir }}/{{ item }}/*.rpm
  with_items:
    - rpm-tools
  ignore_errors: true

#- name: 安装vbbu包
#  shell: rpm -ivh --replacepkgs --force --nodeps  {{ tmp_dir }}/{{ item }}/*.rpm
#  with_items:
#    - vbbu
#  when: "node_label == 'c2000'"
 
#- name: 分发vbbu快捷脚本
#  copy: src={{ software_dir }}/vbbu/sh/{{ item }} dest=/usr/bin mode=u+x
#  with_items:
#    - vbbu_init
#    - vbbu_attach
#    - vbbu_list
#    - dpdk-devbind.py
#  when: "node_label == 'c2000'"

- include_tasks: sriov.yml
  tags: addons_sriov
  loop: "{{ sriov_interfaces }}"
  when:
    - inventory_hostname == item.ip
    - sriov_install == "yes"

- include_tasks: dpdk.yml
  vars:
    dpdk_config_var: "{{item}}" #传参
  tags: addons_dpdk
  loop: "{{ dpdk_interfaces }}"
  when:
    - inventory_hostname == item.ip
    - dpdk_pre_install == "yes"

- name: 查看nfs状态
  shell: "exportfs -v"
  register: nfs_info
  ignore_errors: true
- debug: var=nfs_info.stdout_lines

- name: 设置nfs
  shell: |
         mkdir -p {{ nfs_default_path }}
         chown nobody:nobody {{ nfs_default_path }}
         chmod 755 {{ nfs_default_path }}
         echo "{{ nfs_default_path }} *(rw,sync,no_root_squash)" | sudo tee -a /etc/exports
         systemctl enable nfs-server
         systemctl start nfs-server
  when: 'nfs_default_path not in nfs_info.stdout'

- name: 查看/etc状态
  shell: ls /etc/
  register: etc_info
#- debug: var=etc_info.stdout_lines

- name: 分发resolv.conf文件
  copy: src=resolv.conf dest=/etc/
  when: '"resolv.conf" not in etc_info.stdout'

- name: test
  debug:
    msg:
      - "{{ node_name }}"

- name: 设置主机名
  shell: hostnamectl set-hostname {{ node_name }}


- name: 重启机器
#  reboot: 
#    reboot_timeout: 360
  shell: reboot
  ignore_errors: true