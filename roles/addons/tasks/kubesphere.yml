---
- name: 创建临时目录
  file: dest={{ tmp_dir }}/ksphere state=directory

- name: 生成ksphere yml
  template: src=kubesphere/{{ item }} dest={{ tmp_dir }}/ksphere/{{ item.split('.')[:-1]|join('.') }}
  with_items:
   - kubesphere-installer.yaml.j2
   - cluster-configuration.yaml.j2
  tags: addons_delete

- name: copy ksphere tool
  copy: src=kubesphere dest={{ tmp_dir }}/ksphere/
  tags: addons_delete

- name: copy ksphere tool
  shell: >
         cd {{ tmp_dir }}/ksphere/kubesphere/ &&
         tar -zcvf ks-core.tgz ks-core &&
         mv ks-core.tgz {{ HELM_PATH }}/charts &&
         helm repo index {{ HELM_PATH }}/charts --url http://{{ groups['helm'][0] }}:{{ HELM_PORT }}/charts &&
         helm repo update 

- name: 删除ksphere部署
  shell: "cd {{ tmp_dir }}/ksphere/kubesphere/ && sh kubesphere-delete.sh || echo true; sleep 10"
  tags: addons_delete

- name: 创建ksphere部署1
  shell: "kubectl apply -f {{ tmp_dir }}/ksphere/kubesphere-installer.yaml"

- name: 创建ksphere部署2
  shell: "kubectl apply -f {{ tmp_dir }}/ksphere/cluster-configuration.yaml"

- name: Wait for KubeSphere installer to complete
  shell: |
         kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}')
  register: log_output
  until: log_output.stdout.find("Welcome to KubeSphere!") != -1
  retries: 30
  delay: 20

- name: 更新部署
  shell: >
         helm upgrade --install ks-core {{ tmp_dir }}/ksphere/kubesphere/ks-core/ 
         -f {{ tmp_dir }}/ksphere/kubesphere/ks-core/custom-values-ks-core.yaml 
         --namespace kubesphere-system

- name: 开放ks-api端口
  shell: |
         kubectl -n kubesphere-system patch service ks-apiserver -p '{"spec":{"type":"NodePort", "ports":[{"port":80, "protocol": "TCP", "targetPort":9090, "nodePort":{{ kubesphere_api_nodeport }}}]}}'