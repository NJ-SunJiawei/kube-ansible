---
- name: 创建临时目录
  file: dest={{ tmp_dir }}/ksphere state=directory
  tags: addons_kubesphere_host

- name: 生成ksphere yml
  template: src=kubesphere/{{ item }} dest={{ tmp_dir }}/ksphere/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - kubesphere-installer.yaml.j2
    - cluster-configuration.yaml.j2
  tags:
    - addons_delete
    - kubesphere_delete

- name: copy ksphere tool
  copy: src=kubesphere dest={{ tmp_dir }}/ksphere/
  tags:
    - addons_delete
    - kubesphere_delete
    - addons_kubesphere_host

- name: copy ksphere tool
  shell: >
         cd {{ tmp_dir }}/ksphere/kubesphere/ &&
         tar -zcvf ks-core.tgz ks-core &&
         mv ks-core.tgz {{ HELM_PATH }}/charts &&
         helm repo index {{ HELM_PATH }}/charts --url http://{{ groups['helm'][0] }}:{{ HELM_PORT }}/charts &&
         helm repo update 

- name: helm 删除 kube-prometheus-stack {{ prom_chart_ver }}
  shell: "helm delete prometheus -n {{ prom_namespace }} || echo true; sleep 15"
  tags:
    - addons_delete
    - kubesphere_delete
  ignore_errors: true

#https://github.com/prometheus-community/helm-charts/issues/2753
- name: 删除promutheus旧版本配置
  shell: >
          kubectl delete crd {{ item }}
  with_items:
    - alertmanagerconfigs.monitoring.coreos.com
    - alertmanagers.monitoring.coreos.com
    - podmonitors.monitoring.coreos.com
    - probes.monitoring.coreos.com
    - prometheuses.monitoring.coreos.com
    - prometheusrules.monitoring.coreos.com
    - servicemonitors.monitoring.coreos.com
    - thanosrulers.monitoring.coreos.com
  tags:
    - addons_delete
    - kubesphere_delete
  ignore_errors: true


- name: 删除ksphere部署
  shell: "cd {{ tmp_dir }}/ksphere/kubesphere/ && sh kubesphere-delete.sh || echo true; sleep 10"
  tags:
    - addons_delete
    - kubesphere_delete

#https://ask.kubesphere.io/forum/d/9517-ks-core
#https://ask.kubesphere.io/forum/u/shunxiang
- name: 删除clusterrolebinding配置(官方脚本遗漏)
  shell: >
         kubectl delete clusterrolebinding {{ item }}
  with_items:
    - kubesphere
    - kubesphere-kube-state-metrics
    - kubesphere-node-exporter
    - kubesphere-prometheus-k8s
    - kubesphere-prometheus-operator
    - system:kubesphere-cluster-admin
    - system:nginx-ingress-clusterrole-nisa-binding
  tags:
    - addons_delete
    - kubesphere_delete
  ignore_errors: true

- name: 删除clusterrole配置(官方脚本遗漏)
  shell: >
         kubectl delete clusterrole  {{ item }}
  with_items:
    - ks-controller-manager-role
    - ks-installer
    - kubesphere-kube-state-metrics
    - kubesphere-node-exporter
    - kubesphere-prometheus-k8s
    - kubesphere-prometheus-operator
    - system:kubesphere-router-clusterrole
  tags:
    - addons_delete
    - kubesphere_delete
  ignore_errors: true

- name: 创建命名空间{{ prom_namespace }}
  shell: "kubectl create ns kubesphere-monitoring-system"
  ignore_errors: true

- name: get kube-etcd-client-certs inkubesphere-monitoring-systemfo
  shell: "kubectl get secrets -n kubesphere-monitoring-system"
  register: secrets_info

- name: 创建 kube-etcd-client-certs
  shell: "kubectl create secret generic -n kubesphere-monitoring-system kube-etcd-client-certs \
        --from-file=etcd-client-ca.crt={{ k8s_work_dir }}/ssl/etcd/ca.pem \
        --from-file=etcd-client.crt={{ k8s_work_dir }}/ssl/etcd/server.pem \
        --from-file=etcd-client.key={{ k8s_work_dir }}/ssl/etcd/server-key.pem"
  when: '"kube-etcd-client-certs" not in secrets_info.stdout'

- name: 创建ksphere部署1
  shell: "kubectl apply -f {{ tmp_dir }}/ksphere/kubesphere-installer.yaml"

- name: 创建ksphere部署2
  shell: "kubectl apply -f {{ tmp_dir }}/ksphere/cluster-configuration.yaml"

- name: Wait for KubeSphere installer to complete
  shell: |
         kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-installer -o jsonpath='{.items[0].metadata.name}')
  register: log_output
  until: log_output.stdout.find("Welcome to KubeSphere!") != -1
  retries: 60
  delay: 20

#- name: 删除default-http-backend部署
#  shell: >
#         kubectl delete -f {{ tmp_dir }}/ksphere/kubesphere/kubesphere-controls-system_amd64.yaml

#- name: 更新default-http-backend部署
#  shell: >
#         kubectl apply -f {{ tmp_dir }}/ksphere/kubesphere/kubesphere-controls-system_arm64.yaml

#问题记录：MountVolume.SetUp failed for volume "kubesphere-config" : configmap "kubesphere-config" not found
#https://github.com/kubesphere/ks-installer/issues/907
- name: 更新部署
  shell: >
         helm upgrade --install ks-core {{ tmp_dir }}/ksphere/kubesphere/ks-core/ 
         -f {{ tmp_dir }}/ksphere/kubesphere/ks-core/custom-values-ks-core.yaml 
         --namespace kubesphere-system
- name: 开放ks-api端口
  shell: |
         kubectl -n kubesphere-system patch service ks-apiserver -p '{"spec":{"type":"NodePort", "ports":[{"port":80, "protocol": "TCP", "targetPort":9090, "nodePort":{{ kubesphere_api_nodeport }}}]}}'
- block:
    - name: copy ksphere tool
      shell: >
             cd {{ tmp_dir }}/ksphere/kubesphere/ &&
             tar -zcvf kubefed.tgz kubefed &&
             mv kubefed.tgz {{ HELM_PATH }}/charts &&
             helm repo index {{ HELM_PATH }}/charts --url http://{{ groups['helm'][0] }}:{{ HELM_PORT }}/charts &&
             helm repo update

    - import_tasks: kubesphere_host.yml

  tags: addons_kubesphere_host
  when: kubesphere_clusterRole_host == "yes"