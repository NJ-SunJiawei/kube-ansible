---
- block:
    - name: 创建临时目录
      file: dest={{ tmp_dir }}/calico state=directory
      tags:
        - addons_delete
        - addons_delete_calico

    - name: 删除旧 calico-etcd-secrets
      shell: "kubectl -n kube-system delete secrets calico-etcd-secrets || echo NotFound"
      tags:
        - addons_delete
        - addons_delete_calico

    - name: 准备calico的部署文件
      template: src=calico/{{ item }} dest={{ tmp_dir }}/calico/{{ item.split('.')[:-1]|join('.') }}
      with_items:
       - calico.yaml.j2
      tags:
        - addons_delete
        - addons_delete_calico

    - name: 删除calico部署
      shell: "kubectl delete -f {{ tmp_dir }}/calico/calico.yaml || echo true; sleep 3"
      tags:
        - addons_delete
        - addons_delete_calico

    - name: 创建 calico-etcd-secrets
      shell: "kubectl create secret generic -n kube-system calico-etcd-secrets \
              --from-file=etcd-ca={{ k8s_work_dir }}/ssl/etcd/ca.pem \
              --from-file=etcd-key={{ k8s_work_dir }}/ssl/etcd/server-key.pem \
              --from-file=etcd-cert={{ k8s_work_dir }}/ssl/etcd/server.pem"

    - name: 创建calico部署
      shell: "kubectl apply -f {{ tmp_dir }}/calico/calico.yaml"

- name: 在节点创建相关目录
  file: name={{ item }} state=directory
  with_items:
  - /etc/calico

- name: 下载calicoctl 客户端
  unarchive: src={{ item }} dest={{ tmp_dir }}/calico mode=0755
  with_fileglob:
    - "{{ software_dir }}/calicoctl-linux-arm64-*.tar.gz"

- name: 安装calicoctl二进制文件
  shell: cd {{ tmp_dir }}/calico && mv calicoctl-linux-arm64 /usr/local/bin/calicoctl && chmod 777 /usr/local/bin/calicoctl

- name: 准备 calicoctl配置文件
  template: src=calicoctl.cfg.j2 dest=/etc/calico/calicoctl.cfg

- import_tasks: calico-rr.yml
  when: 'calico_rr_enable|bool'

#loadbalancer ip暴露
#calicoctl patch BGPConfig default --patch '{"spec": {"serviceLoadBalancerIPs": [{"cidr": "10.11.0.0/16"},{"cidr":"10.1.5.0/24"}]}}'
#serviceIP暴露
#calicoctl patch BGPConfig default --patch '{"spec": {"serviceClusterIPs": [{"cidr": "10.233.0.0/18"}]}}'