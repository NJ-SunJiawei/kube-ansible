---
- name: 创建临时目录
  copy: src=ovn dest={{ tmp_dir }}
  tags:
    - addons_delete
    - addons_delete_ovn

- block:
    - name: copy cilium tool
      shell: >
             cp {{ tmp_dir }}/ovn/cilium-1.16.1.tgz {{ HELM_PATH }}/charts &&
             helm repo index {{ HELM_PATH }}/charts --url http://{{ groups['helm'][0] }}:{{ HELM_PORT }}/charts &&
             helm repo update

    - name: 分发并解压cilium cli二进制包
      unarchive: src={{ item }} dest=/usr/local/bin
      with_fileglob:
        - "{{ software_dir }}/cilium-linux-*.tar.gz"

    - name: 创建ns
      shell: | 
              kubectl create ns kube-system
      ignore_errors: true

    - name: 准备安装相关文件
      template: src=ovn/{{ item }} dest={{ tmp_dir }}/ovn/{{ item.split('.')[:-1]|join('.') }}
      with_items:
        - "values.yaml.j2"
      tags:
        - addons_delete
        - addons_delete_ovn

    - name: 卸载hubble cli
      shell: |
             kubectl delete -f {{ tmp_dir }}/ovn/hubble-cli.yaml -n kube-system || echo true; sleep 3

    - name: 卸载cilium-configmap
      shell: |
             kubectl delete -f {{ tmp_dir }}/ovn/chaining.yaml || echo true; sleep 3
      tags:
        - addons_delete
        - addons_delete_ovn

    - name: 卸载cilium
      shell: |
             helm uninstall cilium --namespace kube-system || echo true; sleep 3
      tags:
        - addons_delete
        - addons_delete_ovn

    - name: 卸载cilium旧的配置
      shell: |
             rm -rf /etc/cni/net.d/05-cilium.conflist
             mv /etc/cni/net.d/10-kube-ovn.conflist.cilium_bak /etc/cni/net.d/10-kube-ovn.conflist || echo true
      delegate_to: "{{ item }}"
      with_items: ["{{ groups.k8s }}"]
      ignore_errors: true
      tags:
        - addons_delete
        - addons_delete_ovn
  when: 'kubeovn_cilium_enable|bool'


- block:
    - name: 准备安装相关文件
      template: src=ovn/{{ item }} dest={{ tmp_dir }}/ovn/install.sh
      with_items:
        - "install.sh-{{ kubeovn_ver }}.j2"
      tags:
        - addons_delete
        - addons_delete_ovn

#    - name: 卸载kube-ovn监控
#      shell: 'kubectl delete -f {{ tmp_dir }}/ovn/ovn-promuthes.yaml || echo true; sleep 3'
#      tags:
#        - addons_delete
#        - addons_delete_ovn

    - name: 卸载kube-ovn网络
      shell: 'cd {{ tmp_dir }}/ovn/ && bash cleanup-{{ kubeovn_ver }}.sh'
      ignore_errors: true
      tags:
        - addons_delete
        - addons_delete_ovn

    - name: 卸载kube-ovn旧的配置
      shell: |
             rm -rf /etc/cni/net.d/10-kube-ovn.conflist
      delegate_to: "{{ item }}"
      with_items: ["{{ groups.k8s }}"]
      ignore_errors: true
      tags:
        - addons_delete
        - addons_delete_ovn

    - name: 安装kube-ovn网络
      shell: 'cd {{ tmp_dir }}/ovn/ && \
              bash install.sh >> {{ tmp_dir }}/ovn/install-kube-ovn-`date +"%Y%m%d%H%M%S"`.log 2>&1'
    
 #   - name: 安装kube-ovn监控
 #     shell: 'kubectl apply -f {{ tmp_dir }}/ovn/ovn-promuthes.yaml'


#issues hubble每次卸载后请重启

# 等待网络插件部署成功
- name: 轮询等待kube-ovn 运行，视下载镜像速度而定
  shell: "kubectl get pod -n kube-system -o wide|grep 'kube-ovn-cni'|grep ' {{ node_name }} '|awk '{print $3}'"
  register: pod_status
  until: pod_status.stdout == "Running"
  retries: 15
  delay: 8
  ignore_errors: true
  
- block:
#https://docs.cilium.io/en/stable/installation/cni-chaining-calico/
    - name: 安装cilium-configmap
      shell: |
              kubectl apply -f {{ tmp_dir }}/ovn/chaining.yaml

    - name: 部署cilium
      shell: >
             helm install cilium --namespace kube-system {{ tmp_dir }}/ovn/cilium-1.16.1.tgz
             -f {{ tmp_dir }}/ovn/values.yaml
             --set cni.chainingMode=generic-veth
             --set cni.customConf=true
             --set cni.configMap=cni-configuration
             --set routingMode=native
             --set enableIPv4Masquerade=false
             --set enableIdentityMark=false


    - name: 轮询等待cilium 运行
      shell: "/usr/local/bin/cilium status"
      register: cilium_status
      until: cilium_status.stdout.count('OK') == 3
      retries: 15
      delay: 10
      ignore_errors: true

#https://docs.cilium.io/en/latest/observability/hubble/setup/
    - name: 部署hubble
      shell: >
             /usr/local/bin/cilium hubble enable
      tags:
        - addons_hubble_update

    - name: 轮询等待cilium 运行
      shell: "/usr/local/bin/cilium status"
      register: cilium_status
      until: cilium_status.stdout.count('OK') == 4
      retries: 15
      delay: 10
      ignore_errors: true

    - name: 部署hubble ui
      shell: |
             /usr/local/bin/cilium hubble enable --ui
      tags:
        - addons_hubble_update

    - name: 部署hubble cli
      shell: |
             kubectl apply -f {{ tmp_dir }}/ovn/hubble-cli.yaml -n kube-system
      tags:
        - addons_hubble_update

  when: 'kubeovn_cilium_enable|bool'