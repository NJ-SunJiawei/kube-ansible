- block:
    - name: 选择rr节点(master节点)
      set_fact: NODE_IPS="{% for host in groups['master'] %}{{ host }} {% endfor %}"
      when: "calico_rr_nodes|length == 0"

    - name: 选择rr节点
      set_fact: NODE_IPS="{% for host in calico_rr_nodes %}{{ host }} {% endfor %}"
      when: "calico_rr_nodes|length > 0"

    - name: 显示rr节点
      debug: var="NODE_IPS"

    - name: 配置routeReflectorClusterID
      shell: 'for ip in {{ NODE_IPS }};do \
                node_name=$(calicoctl get node -owide|grep " $ip/"|cut -d" " -f1) && \
                calicoctl patch node "$node_name" \
                  -p "{\"spec\": {\"bgp\": {\"routeReflectorClusterID\": \"244.0.0.1\"}}}"; \
             done'
#https://docs.tigera.io/calico/latest/networking/configuring/bgp
#每个要充当路由反射器的节点都必须有一个集群 ID - 通常是一个未使用的 IPv4 地址。
    - name: node label
      shell: 'for ip in {{ NODE_IPS }};do \
                node_name=$(calicoctl get node -owide|grep " $ip/"|cut -d" " -f1) && \
                kubectl label node "$node_name" route-reflector=true --overwrite;
             done'
      connection: local

    - name: 配置 calico bgp yaml文件
      template: src={{ item }}.j2 dest=/etc/calico/{{ item }}
      with_items:
      - "bgp-default.yaml"
      - "bgp-rr.yaml"

    - name: 应用 calico bgp 配置
      shell: "calicoctl apply -f /etc/calico/bgp-rr.yaml && \
            sleep 5 && \
            calicoctl apply -f /etc/calico/bgp-default.yaml && sleep 2"
  run_once: true

- name: 查看bgp连接
  shell: "calicoctl node status"
  register: bgp_status

- debug: var="bgp_status.stdout_lines"