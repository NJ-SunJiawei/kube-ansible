## Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.16.6
kubeTargetVersionOverride: "1.24.2"

## Configuration for alertmanager
alertmanager:
  alertmanagerSpec:
    image:
      registry: quay.io
  service:
    nodePort: {{ prom_alertmanager_nodeport }}
    type: NodePort

## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  enabled: true
  adminUser: admin
  adminPassword: Admin1234!
  image:
    repository: docker.io/grafana/grafana 
  service:
    nodePort: {{ prom_grafana_nodeport }}
    type: NodePort
  sidecar:
    image:
      repository: quay.io/kiwigrid/k8s-sidecar 
    skipTlsVerify: true


## Component scraping the kube api server
kubeApiServer:
  enabled: true

## Component scraping the kubelet and kubelet-hosted cAdvisor
kubelet:
  enabled: true

## Component scraping the kube controller manager
kubeControllerManager:
  enabled: true
  endpoints:
{% for h in groups['master'] %}
  - {{ h }}
{% endfor %}
  service:
    port: 10257
    targetPort: 10257
  serviceMonitor:
    https: true
    insecureSkipVerify: true
    serverName: localhost

## Component scraping coreDns. Use either this or kubeDns
coreDns:
  enabled: true

## Component scraping etcd
kubeEtcd:
  enabled: true
  endpoints:
{% for h in groups['etcd'] %}
  - {{ h }}
{% endfor %}
  service:
    port: 2379
    targetPort: 2379
  serviceMonitor:
    scheme: https
    insecureSkipVerify: true
    serverName: localhost
    caFile: /etc/prometheus/secrets/etcd-client-cert/etcd-ca
    certFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client
    keyFile: /etc/prometheus/secrets/etcd-client-cert/etcd-client-key

## Component scraping kube scheduler
kubeScheduler:
  enabled: true
  endpoints:
{% for h in groups['master'] %}
  - {{ h }}
{% endfor %}
  service:
    port: 10259
    targetPort: 10259
  serviceMonitor:
    https: true
    insecureSkipVerify: true

## Component scraping kube proxy
kubeProxy:
  enabled: true
  endpoints:
{% for h in groups['k8s'] %}
  - {{ h }}
{% endfor %}

kubeStateMetrics:
  enabled: true

## Configuration for kube-state-metrics subchart
kube-state-metrics:
  image:
    registry:  docker.io
    repository: easzlab/kube-state-metrics

## Configuration for prometheus-node-exporter subchart
prometheus-node-exporter:
  image:
    registry: quay.io
    repository: prometheus/node-exporter

## Manages Prometheus and Alertmanager components
prometheusOperator:
  enabled: true
  admissionWebhooks:
    enabled: true
    patch:
      enabled: true
      image:
        registry: docker.io
        repository: easzlab/kube-webhook-certgen
        tag: v1.5.1
  image:
    registry: quay.io
    repository: prometheus-operator/prometheus-operator
  service:
    nodePort: {{ prom_operator_nodeport }}
    nodePortTls: {{ prom_operator_nodeport_tls }}
    type: NodePort
  prometheusConfigReloader:
    image:
      registry: quay.io
      repository: prometheus-operator/prometheus-config-reloader

## Deploy a Prometheus instance
prometheus:
  enabled: true
  service:
    nodePort: {{ prom_self_nodeport }}
    type: NodePort

  prometheusSpec:
    image:
      registry: quay.io
    replicas: 1
    secrets:
    - etcd-client-cert

    storageSpec: {}
