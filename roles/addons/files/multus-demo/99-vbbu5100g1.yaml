apiVersion: v1                                  #版本号
kind: Pod                                       #启动类型,可以是Job/Deployment/Service等
metadata:                                       #元数据配置
  name: vbbu5100g1                                #pod名称
  namespace: default                            #默认为default
  annotations:                                  #自定义注释
  labels:
    app: bbu
spec:                                           #pod中容器的详细定义
  restartPolicy: Never                  #pod的重启策略，Always-只要终止，都将重启；OnFailure表示只有Pod以非0退出码退出才重启，Nerver表示不再重启该Pod
  containers:                                   #pod中的容器列表
  - name: vbbu5100g1-img                   #容器名称
    image: docker.io/library/bbu5100g1:v1.0   #容器镜像
    imagePullPolicy: IfNotPresent   #镜像拉取的策略：Always-下载镜像；IfNotPresent:优先使用本地镜像
    securityContext:
      privileged: true              #root权限
    command: ["/bin/bash", "/bin/v9.sh"] #容器的启动命令
    args:                                               #容器的启动命令参数
      - "--shm-size=256m"
      - "--cpuset-cpus=1-63"
      - "-m"
      - "40960m"
      - "--memory-swappiness"
      - "-1"
      - "--privileged=true"
      - "--security-opt seccomp=unconfined"
      - "--name"
      - "cnf95_asic_mpu_docker"
      - "3df7eb0f4b888"
    stdin: true
    tty: true
    env:
      - name: DOCKER_VERSION
        value: "18.09.0"
      - name: SELFNODE
        value: "0,1,0"
      - name: ENV_CPU
        value: "1,2"
      - name: ENV_TIMEZONE
        value: "+0800"
      - name: ENV_DISABLEVLAN
        value:
      - name: ENV_ISCP
        value:
      - name: ENV_MEM
        value: "40960"
      - name: ENV_SOCKET_MEM
        value: "4096,0,2048,0,0,0,2048,2048"
      - name: ENV_PCI_WHITELIST
        value: "0000:2c:00.2,0000:23:00.0,0000:23:03.2,0000:23:03.3,"
      - name: ENV_VDEV
        value:
      - name: ENV_UUID
        value: "efb6ce63-8339-46ff-8c33-f1662ef135e3"
      - name: ENV_HDISK
        value: "4096"
      - name: ENV_FILE_PREFIX
        value: "cnf95_asic_mpu_docker"
      - name: ENV_CONFIG
        value:
      - name: ENV_PORT
        value:
      - name: ENV_CPUNUM
        value: "2"
      - name: ENV_CGROUP
        value:
      - name: ENV_DPDK_BASE_VIRTADDR
        value: "0x100000000"
    volumeMounts:                       #挂载到容器内部的存储卷配置，对应下方volumes
      - name: tmp                       #引用pod定义的共享存储卷的名称，需用volumes[]定义的部分卷名
        mountPath: /tmp/data1         #存储卷在容器内部的绝对路径，应少于512字符
      #- name: sock
      #  mountPath: /var/run/docker.sock
      - name: disk
        mountPath: /disk
      - name: mnt
        mountPath: /mnt
      - name: save
        mountPath: /var/run/issu/save
      - name: opt
        mountPath: /opt
      - name: hugepage
        mountPath: /hugepages
    resources:      #资源请求和限制的设置
      requests:     #请求
        memory: 40Gi  #容器初始可用的内存大小
        hugepages-512Mi: 10Gi
        cpu: 61           #容器初始可用的cpu数量
        #windriver.com/isolcpus: 63  #容器初始可用的独立cpu数量
      limits:       #限制
        memory: 40Gi      #内存限制，单位可以为Mib/Gib，将用于docker run --memory参数
        hugepages-512Mi: 10Gi
        cpu: 61             #cpu限制，单位为core的个数，将用于docker run --cpu-shares参数
        #windriver.com/isolcpus: 63
  volumes:  #和上面volumeMount对应，类型有emptyDir/hostPath/downwardAPI/projected/PV等
    - name: tmp
      hostPath:
        path: /
        type: Directory
    - name: disk
      hostPath:
        path: /etc/docker/cnf95_asic_mpu_docker/disk
        type: DirectoryOrCreate         #该类型可以在路径不存在时自动创建
    - name: mnt
      hostPath:
        path: /etc/docker/cnf95_asic_mpu_docker/mnt
        type: DirectoryOrCreate
    - name: save
      hostPath:
        path: /etc/docker/cnf95_asic_mpu_docker/save
        type: DirectoryOrCreate
    - name: opt
      hostPath:
        path: /opt
        type: Directory
    - name: hugepage
      emptyDir:
        medium: HugePages                  #该类型不能自动Create，必须有需要时事先创建
